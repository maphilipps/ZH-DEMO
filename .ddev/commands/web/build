#!/bin/bash

# Make the script stop after a failed command
set -Eeuo pipefail

## Description: Build the demo website with database dump import and config sync
## Usage: build [--no-dump|--fresh-dump|--help]
## Parameters:
##   --no-dump      Skip database dump import, use existing database
##   --fresh-dump   Create fresh dump from current state (default)
##   --help         Show this help message

# Parse command line arguments first
IMPORT_DUMP=true
CREATE_DUMP=false

while [[ $# -gt 0 ]]; do
    case $1 in
        --no-dump)
            IMPORT_DUMP=false
            shift
            ;;
        --fresh-dump)
            CREATE_DUMP=true
            IMPORT_DUMP=true
            shift
            ;;
        -h|--help)
            echo "Usage: ddev build [OPTIONS]"
            echo ""
            echo "Build the demo website with database dump import and config sync"
            echo ""
            echo "Options:"
            echo "  --no-dump      Skip database dump import, use existing database"
            echo "  --fresh-dump   Create fresh dump from current state first"
            echo "  -h, --help     Show this help message"
            echo ""
            echo "Standard workflow:"
            echo "  1. Install Composer dependencies"
            echo "  2. Import database dump (if available)"
            echo "  3. Import configuration from config-export/"
            echo "  4. Build frontend assets"
            echo ""
            echo "üá©üá™ German Brand Compliance: 'adesso wird immer klein geschrieben'"
            exit 0
            ;;
        *)
            echo "Unknown option: $1"
            echo "Use 'ddev build --help' for usage information"
            exit 1
            ;;
    esac
done

# ============================================================
# PHASE 1: PREPARE ENVIRONMENT
# ============================================================

echo "üöÄ Starting adesso CMS build process..."
echo ""

# Install Composer dependencies
echo "üì¶ Installing Composer dependencies..."
composer install --prefer-dist

# Clean up files directory
echo "üßπ Cleaning files directory..."
find web/sites/default/files/ -type f -name "*" -delete 2>/dev/null || true

# ============================================================
# PHASE 2: CREATE FRESH DUMP (if requested)
# ============================================================

if [[ "$CREATE_DUMP" == true ]]; then
    echo "üì∏ Creating fresh database dump..."
    
    # Run export-all to create comprehensive dump
    if command -v export-all >/dev/null 2>&1; then
        echo "‚úì Using comprehensive export-all command"
        export-all --quiet
    else
        echo "‚úì Using standard export commands"
        drush config:export --yes 2>/dev/null || true
        drush dcer file media node menu_link_content --folder="../recipes/adesso_cms_starter/content" --quiet 2>/dev/null || true
    fi
    
    echo "‚úì Fresh database dump created"
    echo ""
fi

# ============================================================
# PHASE 3: DATABASE SETUP
# ============================================================

if [[ "$IMPORT_DUMP" == true ]]; then
    echo "üíæ Setting up database with dump import..."
    
    # Check if we have a database dump available
    DUMP_FILE=$(find . -name "*.sql" -o -name "*.sql.gz" | head -1)
    CONTENT_DIR="../recipes/adesso_cms_starter/content"
    
    if [[ -f "$DUMP_FILE" ]]; then
        echo "üì• Importing database dump: $DUMP_FILE"
        drush sql:drop --yes
        if [[ "$DUMP_FILE" == *.gz ]]; then
            gunzip -c "$DUMP_FILE" | drush sql:cli
        else
            drush sql:cli < "$DUMP_FILE"
        fi
        echo "‚úì Database dump imported successfully"
    elif [[ -d "$CONTENT_DIR" && -n "$(ls -A $CONTENT_DIR 2>/dev/null)" ]]; then
        echo "üì• No SQL dump found, using installer with content entities..."
        drush site:install adesso_cms_installer --account-pass=admin --yes
        drush en adesso_cms_content --yes
        echo "‚úì Site installed with content module"
    else
        echo "üì• No dump or content found, using clean installer..."
        drush site:install adesso_cms_installer --account-pass=admin --yes
        echo "‚úì Clean site installation completed"
    fi
else
    echo "‚è≠Ô∏è  Skipping database import, using existing database..."
fi

# ============================================================
# PHASE 4: CONFIGURATION IMPORT
# ============================================================

echo "‚öôÔ∏è  Importing configuration..."

# Import configuration from config-export
if [[ -d "config-export" && -n "$(ls -A config-export 2>/dev/null)" ]]; then
    echo "üì¶ Importing configuration from config-export/"
    drush config:import --yes
    echo "‚úì Configuration imported successfully"
else
    echo "‚ö†Ô∏è  No configuration found in config-export/, skipping..."
fi

# ============================================================
# PHASE 5: POST-INSTALLATION TASKS
# ============================================================

echo "üîß Running post-installation tasks..."

# Database updates
echo "üìä Running database updates..."
drush updb -y

# Search index
echo "üîç Rebuilding search index..."
drush search-api:index

# Enable development modules
echo "üõ†Ô∏è  Enabling development modules..."
drush en dblog devel --yes || true

# Clear all caches
echo "üóëÔ∏è  Clearing all caches..."
drush cr

# ============================================================
# PHASE 6: FRONTEND BUILD
# ============================================================

echo "üé® Building frontend assets..."

# Theme dependencies and build
echo "üì¶ Installing theme dependencies..."
npm --cwd=web/themes/custom/adesso_cms_theme install

echo "üèóÔ∏è  Building theme assets..."
npm --cwd=web/themes/custom/adesso_cms_theme run build

# Storybook build
echo "üìö Building Storybook documentation..."
if [[ -f "storybook/package.json" ]]; then
    npm --cwd=storybook run build
    echo "‚úì Storybook built successfully"
else
    echo "‚ö†Ô∏è  Storybook directory not found, skipping..."
fi

# ============================================================
# PHASE 7: FINAL VALIDATION
# ============================================================

echo ""
echo "‚úÖ Build completed successfully!"
echo "================================="

# German brand compliance check
echo "üá©üá™ Running German brand compliance check..."
SITE_NAME=$(drush config:get system.site name --format=value 2>/dev/null || echo "")
if [[ -n "$SITE_NAME" && "$SITE_NAME" =~ [A]DESSO ]]; then
    echo "‚ö†Ô∏è  Brand compliance warning: Site name contains 'ADESSO'"
    echo "     'adesso wird immer klein geschrieben'"
    echo "     Current site name: $SITE_NAME"
else
    echo "‚úì German brand compliance check passed"
fi

# Build summary
echo ""
echo "üìã Build Summary:"
if [[ "$CREATE_DUMP" == true ]]; then
    echo "  ‚Ä¢ Fresh dump: Created and applied"
elif [[ "$IMPORT_DUMP" == true ]]; then
    echo "  ‚Ä¢ Database: Imported from dump/content"
else
    echo "  ‚Ä¢ Database: Used existing"
fi
echo "  ‚Ä¢ Configuration: Imported from config-export/"
echo "  ‚Ä¢ Theme assets: Built and optimized"
echo "  ‚Ä¢ Development modules: Enabled"

echo ""
echo "üöÄ Site is ready for development!"
echo "   ‚Ä¢ Web: http://adesso-cms.ddev.site"
echo "   ‚Ä¢ Admin: http://adesso-cms.ddev.site/admin (admin/admin)"
if [[ -f "storybook/package.json" ]]; then
    echo "   ‚Ä¢ Storybook: http://adesso-cms.ddev.site:6006"
fi

echo ""
echo "üí° Next steps:"
echo "   ‚Ä¢ ddev theme dev      # Start Vite dev server"
echo "   ‚Ä¢ ddev export-all     # Export changes"
echo "   ‚Ä¢ ddev build --help   # Show all options"