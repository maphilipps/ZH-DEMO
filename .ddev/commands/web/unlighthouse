#!/bin/bash

## #ddev-generated
## Description: Run Unlighthouse scans with Swiss compliance and Issue #18 requirements
## Usage: unlighthouse [--demo-check|--mobile|--desktop]
## Example: "ddev unlighthouse --demo-check" or "ddev unlighthouse"

set -euo pipefail

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_info() { echo -e "${BLUE}[Unlighthouse]${NC} $1"; }
print_success() { echo -e "${GREEN}[Unlighthouse]${NC} $1"; }
print_warning() { echo -e "${YELLOW}[Unlighthouse]${NC} $1"; }
print_error() { echo -e "${RED}[Unlighthouse]${NC} $1"; }

print_info "🚀 ZH-DEMO Unlighthouse Scanner"
print_info "================================"

# Check if unlighthouse is installed
if ! command -v unlighthouse &> /dev/null; then
    print_warning "📦 Installing Unlighthouse globally..."
    npm install -g unlighthouse @unlighthouse/cli
fi

# Default config
CONFIG_FILE="unlighthouse.ts"
MODE="full"
DESCRIPTION="Full scan (all pages, mobile + desktop)"

# Parse arguments for Issue #18 requirements
case "${1:-}" in
    --demo-check)
        CONFIG_FILE="demo-check.ts"
        MODE="demo"
        DESCRIPTION="Quick demo validation (<5 minutes)"
        print_info "🎯 Demo Check Mode - Perfect for stakeholder presentations!"
        ;;
    --mobile)
        CONFIG_FILE="mobile-only.ts"
        MODE="mobile"
        DESCRIPTION="Mobile-only scan (375x667 viewport)"
        print_info "📱 Mobile-Only Mode - Issue #18 spec: 375x667"
        ;;
    --desktop)
        CONFIG_FILE="desktop-only.ts"
        MODE="desktop"
        DESCRIPTION="Desktop-only scan (1920x1080 viewport)"
        print_info "💻 Desktop-Only Mode - Issue #18 spec: 1920x1080"
        ;;
    --help|-h)
        echo ""
        echo "🔍 ZH-DEMO Unlighthouse Commands (Issue #18 Implementation):"
        echo ""
        echo "  ddev unlighthouse              Full scan (mobile + desktop)"
        echo "  ddev unlighthouse --demo-check Quick demo validation (<5 min)"
        echo "  ddev unlighthouse --mobile     Mobile-only scan (375x667)"
        echo "  ddev unlighthouse --desktop    Desktop-only scan (1920x1080)"
        echo "  ddev unlighthouse --help       Show this help message"
        echo ""
        echo "🇨🇭 Swiss Compliance Features:"
        echo "  ✓ WCAG 2.1 AA validation"
        echo "  ✓ eCH-0059 government standards"
        echo "  ✓ Performance budget: 90+ (government sites)"
        echo "  ✓ Accessibility budget: 95+ (Swiss compliance)"
        echo "  ✓ Multi-viewport testing (mobile + desktop)"
        echo ""
        echo "🌐 Access Results:"
        echo "  • UI: https://zh-demo.ddev.site:5678"
        echo "  • Reports: ./reports/unlighthouse/"
        echo ""
        exit 0
        ;;
    *)
        print_info "🔍 Full Scan Mode - Comprehensive analysis"
        ;;
esac

# Configuration validation
CONFIG_PATH="./tests/unlighthouse/$CONFIG_FILE"
if [ ! -f "$CONFIG_PATH" ]; then
    print_error "❌ Configuration file not found: $CONFIG_PATH"
    print_warning "Available configurations:"
    ls -1 ./tests/unlighthouse/*.ts 2>/dev/null | sed 's|./tests/unlighthouse/||' || echo "  No configurations found!"
    exit 1
fi

print_info "📋 Scan Configuration:"
print_info "   • Mode: $DESCRIPTION"
print_info "   • Config: $CONFIG_FILE"
print_info "   • Site: https://zh-demo.ddev.site"

# Swiss Compliance Information
print_info "🇨🇭 Swiss Compliance Settings:"
print_info "   • WCAG 2.1 AA: Required (95% threshold)"
print_info "   • eCH-0059: Government standards"
print_info "   • Performance: 90% threshold"
print_info "   • Language: Swiss German (de-CH)"

# Create reports directory
mkdir -p "./reports/unlighthouse"

# Set environment for Docker/DDEV
export NODE_TLS_REJECT_UNAUTHORIZED='0'

print_info "🚀 Starting Unlighthouse scanner..."

# Run with proper error handling
if unlighthouse --config-file="$CONFIG_PATH" --host=0.0.0.0 --port=5678; then
    print_success "✅ Scan completed successfully!"
    print_success "📊 Reports: ./reports/unlighthouse/"
    print_success "🌐 UI: https://zh-demo.ddev.site:5678"
    
    if [ "$MODE" = "demo" ]; then
        print_success "🎯 Demo validation complete - ready for presentation!"
    fi
else
    RETURN_CODE=$?
    print_error "❌ Scan failed with code: $RETURN_CODE"
    print_warning "Troubleshooting:"
    print_warning "  • Verify DDEV status: ddev status"
    print_warning "  • Check site access: curl -I https://zh-demo.ddev.site"
    print_warning "  • Review logs above for errors"
    exit $RETURN_CODE
fi