{
  "hookName": "hook_page_attachments_alter",
  "implementation": "\n/**\n * Implements hook_page_attachments_alter().\n * Add Content Security Policy headers for Swiss government compliance.\n */\nfunction adesso_cms_theme_page_attachments_alter(array &$attachments) {\n  $headers = [\n    'Content-Security-Policy' => 'default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://unpkg.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: https: blob:; connect-src 'self' https://api.gpzh.ch wss://localhost:* ws://localhost:*; font-src 'self' https://fonts.googleapis.com https://fonts.gstatic.com data:; object-src 'none'; media-src 'self' https://media.gpzh.ch; frame-src 'self' https://www.youtube.com https://player.vimeo.com https://maps.google.com; worker-src 'self' blob:; child-src 'self' blob:; base-uri 'self'; form-action 'self' https://forms.gpzh.ch; frame-ancestors 'none'; report-uri https://security.gpzh.ch/csp-report; report-to csp-endpoint',\n    'X-Content-Type-Options' => 'nosniff',\n    'X-Frame-Options' => 'DENY',\n    'X-XSS-Protection' => '1; mode=block',\n    'Referrer-Policy' => 'strict-origin-when-cross-origin'\n  ];\n  \n  foreach ($headers as $header => $value) {\n    $attachments['#attached']['http_header'][] = [$header, $value];\n  }\n}",
  "template": "\n{# Content Security Policy implementation in Twig templates #}\n{# Ensure all inline scripts and styles comply with CSP #}\n{% set csp_nonce = random() %}\n<script nonce=\"{{ csp_nonce }}\">\n  // CSP-compliant inline script\n</script>"
}