name: Claude Expert PR Review

on:
  pull_request:
    types: [opened, synchronize]
  issue_comment:
    types: [created]

permissions:
    contents: write
    pull-requests: write
    actions: read
    issues: write

jobs:
  expert-review:
    if: |
      (github.event_name == 'pull_request') ||
      (github.event_name == 'issue_comment' && 
       github.event.issue.pull_request &&
       (contains(github.event.comment.body, '@claude-review') || 
        contains(github.event.comment.body, '/review-pr')))
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup MCP Configuration
        run: |
          mkdir -p /tmp/mcp-config
          cat > /tmp/mcp-config/mcp-servers.json << 'EOF'
          {
            "mcpServers": {
              "github": {
                "command": "docker",
                "args": [
                  "run", "-i", "--rm",
                  "-e", "GITHUB_PERSONAL_ACCESS_TOKEN",
                  "ghcr.io/github/github-mcp-server:sha-efef8ae"
                ],
                "env": {
                  "GITHUB_PERSONAL_ACCESS_TOKEN": "${{ secrets.GITHUB_TOKEN }}"
                }
              }
            }
          }
          EOF

      - name: Create expert review prompt
        run: |
          mkdir -p /tmp/claude-prompts
          cat > /tmp/claude-prompts/expert-review-prompt.txt << 'EOF'
          You are a senior code reviewer for ZH-DEMO, a Drupal 11.2.2 municipal portal prototype for Canton Zurich.
          
          ## Project Context:
          - **ZH-DEMO**: Government portal prototype for German compliance (eCH-0059)
          - **Demo Municipality**: Gemeinde Bruchtal ("Leben am See")
          - **Tech Stack**: Drupal 11.2.2, TailwindCSS v4, Vite, Storybook, Node.js 20
          - **Compliance**: German government standards, WCAG 2.1 AA, brand guidelines
          - **Architecture**: Component-based, 15 paragraph types, atomic design
          
          ## Review Process:
          1. Use mcp__github__get_pull_request to understand PR context and scope
          2. Use mcp__github__get_pull_request_diff to analyze code changes
          3. Use mcp__github__get_pull_request_files to see affected components
          4. Create pending review with mcp__github__create_pending_pull_request_review
          5. Add specific inline comments with mcp__github__add_comment_to_pending_review
          6. Submit comprehensive review with mcp__github__submit_pending_pull_request_review
          
          ## Review Focus Areas:
          
          ### 🔒 Security & Compliance
          - XSS prevention (check for |raw filter usage in Twig templates)
          - German government compliance (eCH-0059 standards)
          - WCAG 2.1 AA accessibility requirements
          - Data privacy and GDPR compliance patterns
          - Brand compliance: "adesso wird immer klein geschrieben"
          
          ### 🏗️ Architecture & Design
          - Component atomic design principles
          - Drupal best practices and coding standards
          - TailwindCSS v4 usage patterns
          - Performance impact on Core Web Vitals
          - Municipal portal user experience
          
          ### 🧹 Code Quality
          - PHP coding standards (Drupal, PSR-12)
          - JavaScript/TypeScript best practices
          - Twig template security and performance
          - Database query optimization
          - Error handling and logging
          
          ### 📚 Documentation & Testing
          - Storybook component documentation
          - API documentation completeness
          - Test coverage for critical functionality
          - German compliance verification procedures
          - CLAUDE.md learning extraction opportunities
          
          ### 🎯 ZH-DEMO Specific
          - Impact on Bruchtal municipality demo
          - 15 paragraph types functionality
          - 4 required webforms preservation
          - Responsive design across devices
          - German language support
          
          ## Review Standards:
          - **Constructive**: Provide specific suggestions and code examples
          - **Educational**: Explain the "why" behind recommendations
          - **Actionable**: Give clear next steps for improvements
          - **Context-Aware**: Consider municipal portal requirements
          - **Compliance-Focused**: Prioritize government standard adherence
          
          ## Inline Comment Guidelines:
          - Point to specific lines with security, performance, or compliance issues
          - Suggest concrete fixes with code examples
          - Reference relevant documentation or standards
          - Highlight learning opportunities for CLAUDE.md
          
          **Target PR**: 
          - Repository: ${{ github.repository }}
          - PR Number: ${{ github.event.pull_request.number || github.event.issue.number }}
          
          Create a thorough, professional review that helps maintain high quality standards for this government compliance project.
          EOF

      - name: Run Claude Expert Review
        uses: anthropics/claude-code-action@v1
        with:
          prompt: $(cat /tmp/claude-prompts/expert-review-prompt.txt)
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          claude_args: |
            --allowedTools mcp__github__get_pull_request,mcp__github__get_pull_request_diff,mcp__github__get_pull_request_files,mcp__github__create_pending_pull_request_review,mcp__github__add_comment_to_pending_review,mcp__github__submit_pending_pull_request_review
            --mcp-config /tmp/mcp-config/mcp-servers.json
            --max-turns 6
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log review completion
        run: |
          echo "✅ Expert PR review completed by Claude"
          echo "PR #${{ github.event.pull_request.number || github.event.issue.number }} reviewed at: $(date -u +"%Y-%m-%d %H:%M:%S UTC")"
