{#
/**
 * @file
 * Theme override to display a news node in full view mode.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date.
 * - author_name: Themed author name.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 */
#}

{# Extract header data from node #}
{% set page_title = node.label %}
{% set page_description = '' %}
{% set header_background_image = '' %}
{% set header_background_alt = '' %}

{# Try to get description from various fields #}
{% if node.hasField('field_lead') and node.field_lead.value %}
  {% set page_description = node.field_lead.value %}
{% elseif node.hasField('field_summary') and node.field_summary.value %}
  {% set page_description = node.field_summary.value %}
{% elseif node.hasField('field_description') and node.field_description.value %}
  {% set page_description = node.field_description.value %}
{% endif %}

{# Try to get background image from various fields #}
{% if node.hasField('field_header_image') and node.field_header_image.entity and node.field_header_image.entity.fileuri %}
  {% set header_background_image = file_url(node.field_header_image.entity.fileuri) %}
  {% set header_background_alt = node.field_header_image.alt|default('') %}
{% elseif node.hasField('field_featured_image') and node.field_featured_image.entity %}
  {# field_featured_image is a media reference #}
  {% if node.field_featured_image.entity.field_media_image.entity and node.field_featured_image.entity.field_media_image.entity.fileuri %}
    {% set header_background_image = file_url(node.field_featured_image.entity.field_media_image.entity.fileuri) %}
    {% set header_background_alt = node.field_featured_image.entity.field_media_image.alt|default('') %}
  {% endif %}
{% elseif node.hasField('field_media') and node.field_media.entity and node.field_media.entity.bundle == 'image' %}
  {% if node.field_media.entity.field_media_image.entity and node.field_media.entity.field_media_image.entity.fileuri %}
    {% set header_background_image = file_url(node.field_media.entity.field_media_image.entity.fileuri) %}
    {% set header_background_alt = node.field_media.entity.field_media_image.alt|default('') %}
  {% endif %}
{% endif %}



{# Complete article structure - replaces node.html.twig #}
{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
  ]
%}

{# Page header is handled by page.html.twig for architectural consistency #}
{# This ensures no duplicate headers and maintains clean separation of concerns #}

<article{{ attributes.addClass(classes) }}>

  {# News page header with node data #}
  <div class="container mx-auto px-6 lg:px-8">

    {{ title_prefix }}
    {# Title is handled by the page header component in page.html.twig #}
    {{ title_suffix }}

    {# Main content area with prose styling #}
    <div class="prose prose-lg container mx-auto mt-8">
      {{ content|without('field_tags', 'field_featured_image', 'frontend_editing') }}
    </div>

    {# Metadata section #}
    <div class="container mx-auto mt-12">
      <div class="bg-gray-50 rounded-lg p-6 border border-gray-200">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Article Information</h3>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          {# Author and publication date #}
          <div class="space-y-3">
            {% if display_submitted %}
              <div class="flex items-center space-x-3">
                <div class="flex-shrink-0">
                  <svg class="w-5 h-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd" />
                  </svg>
                </div>
                <div>
                  <p class="text-sm font-medium text-gray-900">
                    {% if author_name %}{{ author_name }}{% else %}Anonymous{% endif %}
                  </p>
                  <p class="text-sm text-gray-500">Author</p>
                </div>
              </div>
            {% endif %}

            <div class="flex items-center space-x-3">
              <div class="flex-shrink-0">
                <svg class="w-5 h-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" />
                </svg>
              </div>
              <div>
                <p class="text-sm font-medium text-gray-900">
                  <time datetime="{{ node.getCreatedTime|date('c') }}">
                    {{ node.getCreatedTime|date('F j, Y') }}
                  </time>
                </p>
                <p class="text-sm text-gray-500">Published</p>
              </div>
            </div>

            {% if node.getChangedTime != node.getCreatedTime %}
              <div class="flex items-center space-x-3">
                <div class="flex-shrink-0">
                  <svg class="w-5 h-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z" clip-rule="evenodd" />
                  </svg>
                </div>
                <div>
                  <p class="text-sm font-medium text-gray-900">
                    <time datetime="{{ node.getChangedTime|date('c') }}">
                      {{ node.getChangedTime|date('F j, Y') }}
                    </time>
                  </p>
                  <p class="text-sm text-gray-500">Last updated</p>
                </div>
              </div>
            {% endif %}
          </div>

          {# Tags and categories #}
          <div class="space-y-3">
            {% if node.field_tags and node.field_tags is not empty %}
              <div>
                <div class="flex items-center space-x-3 mb-2">
                  <div class="flex-shrink-0">
                    <svg class="w-5 h-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M17.707 9.293a1 1 0 010 1.414l-7 7a1 1 0 01-1.414 0l-7-7A.997.997 0 012 10V5a3 3 0 013-3h5c.256 0 .512.098.707.293l7 7zM5 6a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd" />
                    </svg>
                  </div>
                  <div>
                    <p class="text-sm font-medium text-gray-900">Tags</p>
                  </div>
                </div>
                <div class="flex flex-wrap gap-2">
                  {% for tag in node.field_tags %}
                    {% if tag.entity %}
                      <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                        {{ tag.entity.label }}
                      </span>
                    {% endif %}
                  {% endfor %}
                </div>
              </div>
            {% endif %}

            {# Reading time estimate (basic calculation) #}
            {% if content.body %}
              {% set word_count = content.body|render|striptags|split(' ')|length %}
              {% set reading_time = (word_count / 200)|round %}
              {% if reading_time < 1 %}
                {% set reading_time = 1 %}
              {% endif %}

              <div class="flex items-center space-x-3">
                <div class="flex-shrink-0">
                  <svg class="w-5 h-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd" />
                  </svg>
                </div>
                <div>
                  <p class="text-sm font-medium text-gray-900">
                    {{ reading_time }} min read
                  </p>
                  <p class="text-sm text-gray-500">Estimated reading time</p>
                </div>
              </div>
            {% endif %}
          </div>
        </div>
      </div>
    </div>
  </div>
</article>